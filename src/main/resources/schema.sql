DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS FILM;
DROP TABLE IF EXISTS MPA_RATING;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS STATUS;

CREATE TABLE IF NOT EXISTS genre (
  genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_rating (
  mpa_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS status (
    status_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
  );
 CREATE TABLE IF NOT EXISTS friends (
    friend_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_friend_id BIGINT,
    user_id BIGINT,
    status_code BIGINT REFERENCES status (status_id)
  );
CREATE TABLE IF NOT EXISTS users (
  	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  	email varchar(40) NOT NULL,
    username varchar(40) NOT NULL,
  	login varchar(40) NOT NULL,
    birthday_date date,
  	friends_id BIGINT REFERENCES friends (friend_id),
    status_of_friendship varchar(40)
);
CREATE TABLE IF NOT EXISTS likes (
        like_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        film_id BIGINT,
        user_id BIGINT REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS film (
        film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name varchar(40) NOT NULL,
 	    description varchar(200) NOT NULL,
  	    release_date date,
  	    duration BIGINT,
  	    likes_id BIGINT REFERENCES likes (like_id),
        genre_id BIGINT,
        mpa_id BIGINT REFERENCES mpa_rating (mpa_id)
);
CREATE TABLE genres
(
    film_id BIGINT REFERENCES film (film_id),
    genre_id  BIGINT REFERENCES genre (genre_id),
    CONSTRAINT film_genre_idx UNIQUE (film_id, genre_id)
);
ALTER TABLE likes DROP CONSTRAINT CONSTRAINT_451;